# Redirect all non-HTTPS traffic to HTTPS (force canonical host)
server {
    listen 80 default_server;
    server_name aurasurance.com www.aurasurance.com _;

    # Always redirect HTTP to the canonical HTTPS host
    return 301 https://aurasurance.com$request_uri;
}

# Main server block for HTTPS
server {
    listen 443 ssl;
    server_name aurasurance.com www.aurasurance.com;

    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
    server_tokens off;
    
    # Root directory for the frontend application
    root /usr/share/nginx/html;
    index index.html;

    # Serve frontend Vue3 application
    # Ensure that the index.html is served for all routes
    # This is necessary for Vue Router in history mode
    # and to handle client-side routing correctly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to Django backend (Gunicorn, Uvicorn, etc.)
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy admin requests to Django backend (Gunicorn, Uvicorn, etc.)
    location /admin/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files directly
    location /static/ {
        alias /app/static/;
    }

    # Block access to hidden files/folders like .git, .env, etc.
    location ~ /\.(?!well-known)(.*)$ {
        deny all;
    }

    # Optional: gzip static files
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
}
